version: '3.5'

services:
  db:
    image: postgres:14.1
    volumes:
      - database_volume:/var/lib/postgresql/data
    networks:
      - database_network
    environment:
      - POSTGRES_USER=cnt5410
      - POSTGRES_PASSWORD=cnt5410

  redis:
    image: redis:6.2.6
    networks:
      - redis_network

  caddy:
    image: caddy:2.6.1-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/_caddy/Caddyfile:/etc/caddy/Caddyfile
      - static_files_volume:/usr/share/caddy/static
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - caddy_network
    environment:
      - PROD_HOST_NAME

  django:
    build:
      context: .
      dockerfile: WN.Dockerfile
      args:
        - DJANGO_SECRET_KEY
    depends_on:
      - db
      - redis
    command: gunicorn webauthnio.wsgi -c gunicorn.cfg.py
    volumes:
      - ./webauthn:/usr/src/app
      # Django static files will go here so Caddy can access them
      - static_files_volume:/usr/src/app/static
    networks:
      - caddy_network
      - database_network
      - redis_network
    environment:
      - PYTHONUNBUFFERED=0
      - DJANGO_SECRET_KEY=cnt5410
      - POSTGRES_USER=cnt5410
      - POSTGRES_PASSWORD=cnt5410
      # - POSTGRES_HOST_AUTH_METHOD= "trust"
      - PROD_HOST_NAME=localhost
      - RP_ID=cnt5410
      - RP_NAME=cnt5410
      - RP_EXPECTED_ORIGIN=https://localhost:2019/

  flask:
    build:
      context: .
      dockerfile: KM.Dockerfile
      args:
        - DJANGO_SECRET_KEY
    depends_on:
      - django
    command: ["flask", "run", "--host=0.0.0.0"]
    volumes:
      - ./keyManager:/app
    networks:
      - caddy_network
      - database_network
      - redis_network
    environment:
      - PYTHONUNBUFFERED=0
      - FLASK_DEBUG=1

volumes:
  static_files_volume:
  database_volume:
  caddy_data:
  caddy_config:

networks:
  caddy_network:
  database_network:
  redis_network:
